
Making Progress, Again
======================

:date: 2016-08-03

Full steam ahead !!

1. The inner VRFT works 
2. The outer VRFT works 

Inner VRFT
----------
   
I'm not sure why the inner vrft works now but clearly it does. I use a second order system as a reference model since the only requirements are on damping and bandwidth. With this I can impose arbitrary bandwidth requirements and the controller seems to be able to follow rather well. 

However, this only works on simulated data. I do not have a set of measured data that I can use yet which makes all these results theoretical: they have no noise and no delays. Once I have experimental data I will have to adjust the code to account for that.

Outer VRFT
----------

The outer VRFT works fine too. Previously I was cheating and considering the inner loop as the plant and simply generating :math:`\dot{q}Â°` as a PRBS. I would then simply run ``lsim(integrator * InnerLoop, u, t)`` and use that output. With cascade VRFTthis isn't applicable. Since the method is one shot we calculate the reference signal for the outer loop straight from the I/O data we have. This is what I do now. 

The performance is very impressive. With a simple second order system I can impose arbitrary bandwidth requirements and have the controller follow them. 

When the real data becomes available this might change however. The other thing to consider is that the performance limits of the system are driven by the upper limits on the motor torques. This will impose a hard cap on the achievable performance.

As usual, here are the links to the ``mlx`` files implementing this work: 

* `Inner VRFT <{filename}static/08-03/inner_vrft_mlx.html>`_
* `Outer VRFT <{filename}static/08-03/outer_vrft_mlx.html>`_
  
I've also decided that I should link my daily work to specific git  revisions so that I can retrieve the source files If I need to at a later time. 

Today's git revision is `#468dfc6 <https://github.com/comkieffer/Thesis/tree/468dfc6790ff728a9f61a70b5914c3423ee48060>`_.

