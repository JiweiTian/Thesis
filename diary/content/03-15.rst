
Remembering what's up
=====================

:date: 2016-03-15


Today I started working on my thesis again. I was hoping to make swift progress but as usual the minutiae will bog you down. 

I tried to replicate the examples from the papers. Both papers (A new approach, A direct method) use the same numerical example but present it differently and change one parameter (:math:`\bar{\omega}`). It also doesn’t look like they are using the toolbox. 
It didn’t work. 

The Bode plot of the reference model and the plant model are correct but the generated controller isn’t. The controller family is: 


.. math::

	C(z; \theta) = \frac{\theta_0 + \theta_1 z^{-1} + \theta_2 z^{-2} + \theta_3 z^{-3} + \theta_4 z^{-4} + \theta_5 z^{-5}}{1 - z^{-1}} 

So the Controller family vector should be : 
  
.. code-block:: matlab

	c1 =    1 / (1 - z^-1);  c1.Variable = 'z^-1';
	c2 = z^-1 / (1 - z^-1);  c2.Variable = 'z^-1';
	c3 = z^-2 / (1 - z^-1);  c3.Variable = 'z^-1';
	c4 = z^-3 / (1 - z^-1);  c4.Variable = 'z^-1';
	c5 = z^-4 / (1 - z^-1);  c5.Variable = 'z^-1';
	c6 = z^-5 / (1 - z^-1);  c6.Variable = 'z^-1';
	Controller = [c1 c2 c3 c4 c5 c6]';

Running 

.. code-block:: matlab

	OptimalController = VRFT1_ry(u, y, RefModel,  Controller, [], [], []);

Produces an optimal controller that has little to do with what I thought I put in. 
The reason is that I'm dumb. 

The optimal controller is : 

.. math::
	C(z) = \beta^T(z) \cdot {\theta_n}^T

Thus we need to split the controller into independant terms: 

.. math::
	C(z; \theta) = \frac{A_1}{1 - z^{-1}} + \frac{A_2}{1 - z^{-1}} + ... + \frac{A_6}{1 - z^{-1}}

I also started to look at the previous work to make a work plan. My predecessors made a :math`2^{nd}` order continuous time reference model that they then translated to discrete time with c2d. I'd like to start y making a discrete time model and skip the continous time model entirely. 

The controller is a simple PID. I need to brush up on the theory side of things to understand discrete time stuff better. 

Once I have the PID family set up I can generate the optimal controller and start thinking about the cascade problem. 

The objective is to have a proof of concept of the cascade setup ASAP to show to the professor. I'll worry about noise later on. 
