Y U NO WOOOOORK
===============

:date: 2016-09-04

What I did
----------

Over the past month or so of holidays I did some work but nothing really has come out of it. 

We face two problems at the moment: 

- Identifying the order (:math:`k`) of the noise in the input signal. 
- Identifying the delay in the real system. 
  
The noise estimation can be done in several ways: the first is simply to run the VRFT with a bunch of different noise values and look for the best performance, otherwise we can do a proper noise estimation with the built-in MATLAB tools. 

However, we also need to estimate the delay in the system. Here the only real way forwards is to try a bunch of values and see what works best. We know that the noise must be a multiple of 10 ms because of the way the controller is structured (10 ms discrete time steps). 

I decided to consider noise orders from 1 to 25 and delays in the set :math:`{ 0, 10, 30, 40 } ms`. This makes a total of :math:`25 \times 5 = 125` combinations. 

Of these we can discard all the ones that have zeros with magnitude larger than 1 since we need to invert the inner controller to calculate the error (:math:`e_i(t)`) which is used to calculate reference signal for the outer loop. All the controllers with :math:`\|z_i\| > 1` will become unstable when inverted and the reference will diverge making it useless. 

Of the remaining controllers none look better than the others. They all have a pretty significant error in their Bode plots compared to the reference. Clearly this wasn't working well enough.

I then attempted to separate the two problems by first doing the noise estimation with built-in tools but this didn't work too well. 


What I'm doing
--------------

Clearly this is going nowhere. I need to better quantify my results instead of eyeballing them. Now MATLAB is just shitting on me and I can't take it anymore. 

*Some time later ...*

After taking a look at the VRFT tool source it looks like the noise can actually be specified as a ``[na nb]`` vector instead of a simple ``k``. This means that we can actually the ``System Identification App`` in MATLAB to try to do the noise estimation but again we see that accuracy just increases with model complexity. 

At this point I don't really know what to do. 





