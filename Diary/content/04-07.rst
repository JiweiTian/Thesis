Writing about Cascade Control and Noise
=======================================

:date: 2016-04-07

Today I started with some cleanup and added the 'Better Figures and Images' plugin to the repo.

I spent the rest of my morning doing a write-up about cascade VRFT. I have a firm (I think) grasp on the method. I then started looking at the problem of noisy data. 

VRFT And Noise
--------------

Assume that the plant output (:math:`y`) is affected by an additive noise :math:`\zeta(t)` .

.. math:: 

    \tilde{y}(t) = P \ u(t) + \zeta(t)

In an open loop experiment it is reasonable to assume that :math:`y` and :math:`\zeta` are uncorrelated. In a closed loop experiment this would not be the case since :math:`\zeta` would propagate through the retro-action into the error term :math:`e` and from there to the plant output. 

This noise will introduce a bias into :math:`J_{VR}`. 

Recall the asymptotic with noise free data: 

.. math::

    J_{VR}(\theta) = \frac{1}{2\pi} \int_{-\pi}^{\pi} \left| P \cdot \left( C_0 - C(\theta) \right) \left( 1 - M_R \right) \cdot \frac{L}{M_R} \right|^2 \Phi_u \ d\omega

With the noise however it becomes: 

.. math::

    J_{VR}(\theta) = \frac{1}{2\pi} \int_{-\pi}^{\pi} \left[ \left| P \cdot \left( C_0 - C(\theta) \right) \left( 1 - M_R \right) \cdot \frac{L}{M_R} \right|^2 \Phi_u + \left| \frac{C(\theta)}{PC_0} L \right|^2 \Phi_d \right] d\omega

Where :math:`Phi_d` is the spectral density of the noise. Since the second term depends on :math:`\theta` the minima of the two functions are different. If this were not the case the extra term would just represent a constant vertical offset and could safely be neglected.

One way of counteracting this effect is to use 2 different output measurements with the same input signal. We simply run the same experiment twice and record the output of the system. We then calculate: 

.. math::

    \begin{aligned}
        \tilde{\varphi}_L^{(1)} &= \beta(z)\tilde{e}_L^{(1)} = \beta(z) \frac{1 - M_R}{M_R} L(z)\  \tilde{y}^{(1)}(t) \\
        \tilde{\varphi}_L^{(2)} &= \beta(z)\tilde{e}_L^{(2)} = \beta(z) \frac{1 - M_R}{M_R} L(z)\  \tilde{y}^{(2)}(t) \\
    \end{aligned} 

And we then compute the optimal parameter vector as: 

.. math:: 

    \theta_N^{P1} = \left[ \sum_{t=1}^N \tilde{\varphi}_L^{(1)}(t)\ \tilde{\varphi}_L^{(2)T}(t) \right]^{-1} \sum_{t=1}^N \tilde{\varphi}_l^{(1)}(t)\ u_L(t)

If the two experiments are uncorrelated then asymptotically :math:`\theta_N^{P1}` will converge to the value observed in the noiseless case. 

If we are unable to obtain a second set of measurement data we can identify a high-order model of the plant and use it to generate a new set of outputs. However, due to the limited accuracy of such a model this does not guarantee that :math:`\theta_N^{P1}` will converge to the noiseless value. 

Open Questions so Far
---------------------

We use 2 sets of data for noise reduction. Why not use more and simply average them. Why don't we calculate a :math:`\bar{varphi}`, the average of the :math:`\tilde{\varphi}_L^{(n)}`, and use that instead ?


Stuff to work on next
---------------------

I don't know. I'm kind of stuck at the moment with nothing to do until I get more information.



